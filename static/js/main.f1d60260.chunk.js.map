{"version":3,"sources":["serviceWorker.js","components/navigation/side-menu.js","components/navigation/breadcrumbs.js","components/navigation/navigation.js","components/output/textbox.js","components/output/directions.js","components/output/travel-message.js","components/output/output.js","index.js"],"names":["Boolean","window","location","hostname","match","useStyles","makeStyles","theme","list","width","fullList","entry","marginLeft","SideMenu","props","classes","react_default","a","createElement","Drawer","open","onClose","toggle","className","role","onClick","onKeyDown","List","ListItem","key","ListItemIcon","Visibility_default","ListItemText","primary","button","ChevronRight_default","Work_default","breadcrumbs","padding","spacing","breadcrumbLink","display","breadcrumbIcon","marginRight","NavBreadcrumbs","breadcrumbEntries","entries","area","push","Link","color","href","event","preventDefault","alert","AccountBalance_default","text","Typography","LocationOn_default","Paper","elevation","paper","Breadcrumbs","aria-label","menuButton","title","marginTop","marginBottom","toolbar","Navigation","_React$useState","React","useState","_React$useState2","Object","slicedToArray","drawerOpen","setDrawerOpen","toggleDrawer","type","menu","IconButton","edge","Menu_default","Box","titleContainer","variant","project","AppBar","position","Toolbar","Grid","container","direction","root","Textbox","component","paddingLeft","paddingRight","outerGrid","margin","innerGridLeft","paddingTop","innerGridRight","Directions","Container","item","xs","TravelMessage","DirectionsWalk_default","Output","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f1d60260.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Drawer from \"@material-ui/core/Drawer\";\r\nimport List from \"@material-ui/core/List\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\n// Icons\r\nimport ArrowIcon from \"@material-ui/icons/ChevronRight\";\r\nimport BagIcon from \"@material-ui/icons/Work\";\r\nimport ApparelIcon from \"@material-ui/icons/Visibility\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles(theme => ({\r\n  list: {\r\n    width: 250\r\n  },\r\n  fullList: {\r\n    width: \"auto\"\r\n  },\r\n  entry: {\r\n    marginLeft: \"15px\"\r\n  }\r\n}));\r\n\r\n// React Component\r\nexport default function SideMenu(props) {\r\n  const classes = useStyles();\r\n\r\n  const sideList = () => (\r\n    <div\r\n      className={classes.list}\r\n      role=\"presentation\"\r\n      onClick={props.toggle(false)}\r\n      onKeyDown={props.toggle(false)}\r\n    >\r\n      <List>\r\n        <ListItem key={\"Apperance\"}>\r\n          <ListItemIcon>{<ApparelIcon />}</ListItemIcon>\r\n          <ListItemText primary={\"Apperance\"} />\r\n        </ListItem>\r\n        <ListItem button key={\"Letter\"}>\r\n          <ListItemIcon>\r\n            <ArrowIcon className={classes.entry} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Bussiness Suit\"} />\r\n        </ListItem>\r\n      </List>\r\n      <List>\r\n        <ListItem key={\"Inventory\"}>\r\n          <ListItemIcon>{<BagIcon />}</ListItemIcon>\r\n          <ListItemText primary={\"Inventory\"} />\r\n        </ListItem>\r\n        <ListItem button key={\"Letter\"}>\r\n          <ListItemIcon>\r\n            <ArrowIcon className={classes.entry} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Letter\"} />\r\n        </ListItem>\r\n        <ListItem button key={\"Postage Stamp\"}>\r\n          <ListItemIcon>\r\n            <ArrowIcon className={classes.entry} />\r\n          </ListItemIcon>\r\n          <ListItemText primary={\"Postage Stamp\"} />\r\n        </ListItem>\r\n      </List>\r\n    </div>\r\n  );\r\n\r\n  return (\r\n    <Drawer open={props.open} onClose={props.toggle(false)}>\r\n      {sideList()}\r\n    </Drawer>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Breadcrumbs from \"@material-ui/core/Breadcrumbs\";\r\nimport Link from \"@material-ui/core/Link\";\r\n\r\n// Icons\r\nimport AreaIcon from \"@material-ui/icons/AccountBalance\";\r\nimport LocationIcon from \"@material-ui/icons/LocationOn\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles(theme => ({\r\n  breadcrumbs: { padding: theme.spacing(1, 2) },\r\n  breadcrumbLink: {\r\n    display: \"flex\"\r\n  },\r\n  breadcrumbIcon: {\r\n    marginRight: theme.spacing(0.5)\r\n  }\r\n}));\r\n\r\n// React Component\r\nexport default function NavBreadcrumbs(props) {\r\n  const classes = useStyles();\r\n\r\n  function handleClick(event) {\r\n    event.preventDefault();\r\n    alert(\"You clicked a breadcrumb.\");\r\n  }\r\n\r\n  // Generate links for all breadcrumb entries before combining\r\n  let breadcrumbEntries = [];\r\n\r\n  // Where the user is currently located in the game\r\n  if (props.entries.area) {\r\n    breadcrumbEntries.push(\r\n      <Link\r\n        color=\"inherit\"\r\n        href=\"/\"\r\n        onClick={handleClick}\r\n        className={classes.breadcrumbLink}\r\n      >\r\n        <AreaIcon className={classes.breadcrumbIcon} />\r\n        {props.entries.area.text}\r\n      </Link>\r\n    );\r\n  }\r\n\r\n  // What the user is currently focused on\r\n  if (props.entries.location) {\r\n    breadcrumbEntries.push(\r\n      <Typography color=\"textPrimary\" className={classes.breadcrumbLink}>\r\n        <LocationIcon className={classes.breadcrumbIcon} />\r\n        {props.entries.location.text}\r\n      </Typography>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <Paper elevation={0} className={classes.paper}>\r\n      <Breadcrumbs aria-label=\"Breadcrumb\" className={classes.breadcrumbs}>\r\n        {breadcrumbEntries}\r\n      </Breadcrumbs>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport AppBar from \"@material-ui/core/AppBar\";\r\nimport Toolbar from \"@material-ui/core/Toolbar\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport IconButton from \"@material-ui/core/IconButton\";\r\nimport MenuIcon from \"@material-ui/icons/Menu\";\r\nimport Box from \"@material-ui/core/Box\";\r\n\r\nimport SideMenu from \"./side-menu\";\r\nimport BreadCrumbs from \"./breadcrumbs\";\r\n\r\n// Styles\r\nconst useStyles = makeStyles(theme => ({\r\n  menuButton: {\r\n    marginRight: theme.spacing(2)\r\n  },\r\n  title: { marginTop: \"0px\", marginBottom: \"3px\" },\r\n  toolbar: { marginTop: \"5px\", marginBottom: \"10px\" }\r\n}));\r\n\r\n// React Component\r\nexport default function Navigation(props) {\r\n  const classes = useStyles();\r\n\r\n  // Drawer state\r\n  const [drawerOpen, setDrawerOpen] = React.useState(false);\r\n  const toggleDrawer = open => event => {\r\n    if (\r\n      event.type === \"keydown\" &&\r\n      (event.key === \"Tab\" || event.key === \"Shift\")\r\n    )\r\n      return;\r\n\r\n    setDrawerOpen(open);\r\n  };\r\n\r\n  // Side menu\r\n  const menu = (\r\n    <IconButton\r\n      edge=\"start\"\r\n      className={classes.menuButton}\r\n      color=\"inherit\"\r\n      aria-label=\"Menu\"\r\n      onClick={toggleDrawer(true)}\r\n    >\r\n      <MenuIcon />\r\n    </IconButton>\r\n  );\r\n\r\n  // Name of the project\r\n  const title = (\r\n    <Box className={classes.titleContainer}>\r\n      <Typography variant=\"h6\" className={classes.title}>\r\n        {props.project}\r\n      </Typography>\r\n    </Box>\r\n  );\r\n\r\n  return (\r\n    <AppBar position=\"static\">\r\n      <SideMenu open={drawerOpen} toggle={toggleDrawer} />\r\n      <Toolbar className={classes.toolbar}>\r\n        {menu}\r\n        <Grid container direction=\"column\">\r\n          {title}\r\n          <BreadCrumbs entries={props.entries} />\r\n        </Grid>\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(3, 2),\r\n    marginTop: \"10px\",\r\n    marginBottom: \"10px\"\r\n  }\r\n}));\r\n\r\nexport default function Textbox() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography component=\"p\">\r\n        Brentwood began as a community in the late 19th century, and is still\r\n        known throughout the Bay Area for its agricultural products, primarily\r\n        its cherries, corn and peaches. Due to urban sprawl many of the old\r\n        farms and orchards have been replaced by suburban developments since\r\n        1990. Brentwood is increasingly residential, with the rate of population\r\n        growth in the triple digits during the 1990s and 69% from 2000 through\r\n        2010. An official estimate showed the population increased nearly 21%\r\n        during the period 2010 to 2016.\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Grid from \"@material-ui/core/Grid\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport ArrowUp from \"@material-ui/icons/LocationOn\";\r\nimport ArrowDown from \"@material-ui/icons/LocationOn\";\r\nimport ArrowLeft from \"@material-ui/icons/LocationOn\";\r\nimport ArrowRight from \"@material-ui/icons/LocationOn\";\r\n\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    paddingLeft: \"0px\",\r\n    paddingRight: \"0px\"\r\n  },\r\n  outerGrid: { margin: \"0px\" },\r\n  innerGridLeft: {\r\n    padding: \"0px !important\",\r\n    paddingTop: \"10px !important\"\r\n  },\r\n  innerGridRight: {\r\n    padding: \"0px !important\",\r\n    paddingLeft: \"20px !important\",\r\n    paddingTop: \"10px !important\"\r\n  }\r\n}));\r\n\r\nexport default function Directions() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Grid>\r\n        <Grid className={classes.outerGrid} container item xs={12} spacing={3}>\r\n          <Grid className={classes.innerGridLeft} item xs={6}>\r\n            <Paper className={classes.direction}>\r\n              <ListItem button key={\"UpDirection\"}>\r\n                <ListItemIcon>\r\n                  <ArrowUp />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Oakly\"} />\r\n              </ListItem>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid className={classes.innerGridRight} item xs={6}>\r\n            <Paper className={classes.direction}>\r\n              <ListItem button key={\"DownDirection\"}>\r\n                <ListItemIcon>\r\n                  <ArrowDown />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Livermore\"} />\r\n              </ListItem>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Grid className={classes.outerGrid} container item xs={12} spacing={3}>\r\n          <Grid className={classes.innerGridLeft} item xs={6}>\r\n            <Paper className={classes.direction}>\r\n              <ListItem button key={\"LeftDirection\"}>\r\n                <ListItemIcon>\r\n                  <ArrowLeft />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Concord\"} />\r\n              </ListItem>\r\n            </Paper>\r\n          </Grid>\r\n\r\n          <Grid className={classes.innerGridRight} item xs={6}>\r\n            <Paper className={classes.direction}>\r\n              <ListItem button key={\"RightDirection\"}>\r\n                <ListItemIcon>\r\n                  <ArrowRight />\r\n                </ListItemIcon>\r\n                <ListItemText primary={\"Stockton\"} />\r\n              </ListItem>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </Grid>\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nimport Paper from \"@material-ui/core/Paper\";\r\nimport Typography from \"@material-ui/core/Typography\";\r\nimport ListItem from \"@material-ui/core/ListItem\";\r\nimport ListItemText from \"@material-ui/core/ListItemText\";\r\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\r\n\r\nimport DirectionsIcon from \"@material-ui/icons/DirectionsWalk\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  root: {\r\n    padding: theme.spacing(1, 1)\r\n  }\r\n}));\r\n\r\nexport default function TravelMessage() {\r\n  const classes = useStyles();\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Typography component=\"p\">\r\n        <ListItem button key={\"LeftDirection\"}>\r\n          <ListItemIcon>\r\n            <DirectionsIcon />\r\n          </ListItemIcon>\r\n          <ListItemText\r\n            primary={\"You can travel to some other places from here\"}\r\n          />\r\n        </ListItem>\r\n      </Typography>\r\n    </Paper>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport Container from \"@material-ui/core/Container\";\r\n\r\nimport Textbox from \"./textbox\";\r\nimport Directions from \"./directions\";\r\nimport TravelMessage from \"./travel-message\";\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n  container: {\r\n    padding: \"10px\"\r\n  }\r\n}));\r\n\r\nexport default function Output() {\r\n  const classes = useStyles();\r\n\r\n  return (\r\n    <Container className={classes.container}>\r\n      <Textbox />\r\n      <TravelMessage />\r\n      <Directions />\r\n    </Container>\r\n  );\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\nimport \"./index.css\";\r\n\r\nimport Navigation from \"./components/navigation/navigation\";\r\nimport Output from \"./components/output/output\";\r\n\r\nfunction App() {\r\n  return (\r\n    <div className=\"App\">\r\n      <Navigation\r\n        project=\"United States\"\r\n        entries={{\r\n          area: { text: \"California\" },\r\n          location: { text: \"Brentwood\" }\r\n        }}\r\n      />\r\n      <Output />\r\n    </div>\r\n  );\r\n}\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}